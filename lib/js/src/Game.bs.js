// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Grid$ReactTemplate = require("./Grid.bs.js");
var Utils$ReactTemplate = require("./Utils.bs.js");

var initialState = /* record */[
  /* grid : :: */[
    /* :: */[
      /* Dead */0,
      /* :: */[
        /* Dead */0,
        /* :: */[
          /* Dead */0,
          /* :: */[
            /* Dead */0,
            /* :: */[
              /* Dead */0,
              /* :: */[
                /* Dead */0,
                /* :: */[
                  /* Dead */0,
                  /* :: */[
                    /* Dead */0,
                    /* :: */[
                      /* Dead */0,
                      /* :: */[
                        /* Dead */0,
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    /* :: */[
      /* :: */[
        /* Alive */1,
        /* :: */[
          /* Alive */1,
          /* :: */[
            /* Dead */0,
            /* :: */[
              /* Dead */0,
              /* :: */[
                /* Dead */0,
                /* :: */[
                  /* Dead */0,
                  /* :: */[
                    /* Dead */0,
                    /* :: */[
                      /* Dead */0,
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* [] */0
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      /* :: */[
        /* :: */[
          /* Dead */0,
          /* :: */[
            /* Dead */0,
            /* :: */[
              /* Dead */0,
              /* :: */[
                /* Dead */0,
                /* :: */[
                  /* Dead */0,
                  /* :: */[
                    /* Dead */0,
                    /* :: */[
                      /* Dead */0,
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* :: */[
                            /* Dead */0,
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        /* :: */[
          /* :: */[
            /* Dead */0,
            /* :: */[
              /* Dead */0,
              /* :: */[
                /* Dead */0,
                /* :: */[
                  /* Alive */1,
                  /* :: */[
                    /* Alive */1,
                    /* :: */[
                      /* Dead */0,
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* :: */[
                            /* Dead */0,
                            /* :: */[
                              /* Dead */0,
                              /* [] */0
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ],
          /* :: */[
            /* :: */[
              /* Dead */0,
              /* :: */[
                /* Dead */0,
                /* :: */[
                  /* Dead */0,
                  /* :: */[
                    /* Dead */0,
                    /* :: */[
                      /* Alive */1,
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* :: */[
                            /* Dead */0,
                            /* :: */[
                              /* Dead */0,
                              /* :: */[
                                /* Dead */0,
                                /* [] */0
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ],
            /* :: */[
              /* :: */[
                /* Dead */0,
                /* :: */[
                  /* Dead */0,
                  /* :: */[
                    /* Dead */0,
                    /* :: */[
                      /* Dead */0,
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* :: */[
                            /* Dead */0,
                            /* :: */[
                              /* Dead */0,
                              /* :: */[
                                /* Dead */0,
                                /* :: */[
                                  /* Dead */0,
                                  /* [] */0
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              /* :: */[
                /* :: */[
                  /* Dead */0,
                  /* :: */[
                    /* Dead */0,
                    /* :: */[
                      /* Dead */0,
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* :: */[
                            /* Dead */0,
                            /* :: */[
                              /* Dead */0,
                              /* :: */[
                                /* Dead */0,
                                /* :: */[
                                  /* Dead */0,
                                  /* :: */[
                                    /* Dead */0,
                                    /* [] */0
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                /* :: */[
                  /* :: */[
                    /* Dead */0,
                    /* :: */[
                      /* Dead */0,
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* :: */[
                            /* Dead */0,
                            /* :: */[
                              /* Dead */0,
                              /* :: */[
                                /* Dead */0,
                                /* :: */[
                                  /* Dead */0,
                                  /* :: */[
                                    /* Dead */0,
                                    /* :: */[
                                      /* Dead */0,
                                      /* [] */0
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      /* Dead */0,
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* :: */[
                            /* Dead */0,
                            /* :: */[
                              /* Dead */0,
                              /* :: */[
                                /* Dead */0,
                                /* :: */[
                                  /* Dead */0,
                                  /* :: */[
                                    /* Dead */0,
                                    /* :: */[
                                      /* Dead */0,
                                      /* :: */[
                                        /* Dead */0,
                                        /* [] */0
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        /* Dead */0,
                        /* :: */[
                          /* Dead */0,
                          /* :: */[
                            /* Dead */0,
                            /* :: */[
                              /* Dead */0,
                              /* :: */[
                                /* Dead */0,
                                /* :: */[
                                  /* Dead */0,
                                  /* :: */[
                                    /* Dead */0,
                                    /* :: */[
                                      /* Dead */0,
                                      /* :: */[
                                        /* Dead */0,
                                        /* :: */[
                                          /* Dead */0,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ],
  /* gameState : Paused */1
];

function toggleField(rowI, colI, grid) {
  return List.mapi((function (rowIndex, row) {
                return List.mapi((function (colIndex, value) {
                              var match = colI === colIndex && rowI === rowIndex;
                              if (match) {
                                if (value) {
                                  return /* Dead */0;
                                } else {
                                  return /* Alive */1;
                                }
                              } else {
                                return value;
                              }
                            }), row);
              }), grid);
}

var component = ReasonReact.reducerComponent("Game");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function () {
              return /* () */0;
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              return React.createElement("div", {
                          className: "game"
                        }, ReasonReact.element(/* None */0, /* None */0, Grid$ReactTemplate.make(param[/* state */1][/* grid */0], (function (row, col) {
                                    return Curry._1(send, /* ToggleField */[
                                                row,
                                                col
                                              ]);
                                  }), /* array */[])), React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(send, /* NextFrame */0);
                                })
                            }, Utils$ReactTemplate.toString("knop")));
            }),
          /* initialState */(function () {
              return initialState;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                var grid = toggleField(action[0], action[1], state[/* grid */0]);
                return /* Update */Block.__(0, [/* record */[
                            /* grid */grid,
                            /* gameState */state[/* gameState */1]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* grid */Utils$ReactTemplate.calcNextState(state[/* grid */0]),
                            /* gameState */state[/* gameState */1]
                          ]]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.initialState = initialState;
exports.toggleField = toggleField;
exports.component = component;
exports.make = make;
/* component Not a pure module */
